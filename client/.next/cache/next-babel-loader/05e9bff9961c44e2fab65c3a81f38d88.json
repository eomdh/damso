{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeokHyeon\\\\Desktop\\\\bluejay\\\\client\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport TextArea from 'react-textarea-autosize';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nconst Container = styled.div.withConfig({\n  displayName: \"CommentForm__Container\",\n  componentId: \"sc-4gemyq-0\"\n})([\"width:100%;max-height:500px;display:flex;justify-content:center;align-items:center;\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"CommentForm__Form\",\n  componentId: \"sc-4gemyq-1\"\n})([\"width:100%;min-height:50px;padding:10px;display:flex;flex-direction:column;position:relative;\"]);\nconst ContentInput = styled(TextArea).withConfig({\n  displayName: \"CommentForm__ContentInput\",\n  componentId: \"sc-4gemyq-2\"\n})([\"width:83%;border:none;padding:8px;font-size:16px;min-height:40px;max-height:300px;border-radius:10px;background-color:#f8f9fa;\"]);\nconst SubmitButton = styled.button.withConfig({\n  displayName: \"CommentForm__SubmitButton\",\n  componentId: \"sc-4gemyq-3\"\n})([\"all:unset;position:absolute;background-color:#1864ab;color:white;letter-spacing:2px;font-weight:600;font-size:14px;width:70px;height:30px;border-radius:6px;bottom:22px;right:20px;cursor:pointer;opacity:\", \";transition:opacity 0.3s linear;display:flex;justify-content:center;align-items:center;\"], props => props.isAvailableUpload ? 1 : 0.6);\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const onChangeContent = useCallback(e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setContent(e.target.value);\n\n    if (value.trim()) {\n      setIsAvailablePosting(true);\n    } else if (value.length === 0 || value.length > 500) {\n      setIsAvailablePosting(false);\n    }\n\n    ;\n  }, [content]);\n  const {\n    0: isAvailablePosting,\n    1: setIsAvailablePosting\n  } = useState(false);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (content.length > 500) {\n      alert(\"글자수가 너무 많습니다.\");\n      return;\n    }\n\n    if (!content || !content.trim()) {\n      return alert(\"댓글을 작성해주세요.\");\n    }\n\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: content,\n        postId: post.id,\n        userId: id\n      }\n    });\n    console.log(post.id, content);\n  }, [content]);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(ContentInput, {\n    placeholder: id ? \"댓글을 남겨주세요.\" : \"로그인 후 이용해주세요.\",\n    disabled: id ? false : true,\n    value: content,\n    onChange: onChangeContent,\n    style: {\n      resize: \"none\",\n      outline: \"none\",\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), __jsx(SubmitButton, {\n    type: \"submit\",\n    isAvailableUpload: isAvailablePosting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"\\uC785\\uB825\")));\n};\n\nexport default CommentForm;","map":{"version":3,"names":["React","useCallback","useState","useDispatch","useSelector","styled","TextArea","ADD_COMMENT_REQUEST","Container","div","Form","form","ContentInput","SubmitButton","button","props","isAvailableUpload","CommentForm","post","dispatch","id","state","user","me","content","setContent","onChangeContent","e","target","value","trim","setIsAvailablePosting","length","isAvailablePosting","onSubmit","preventDefault","alert","type","data","postId","userId","console","log","resize","outline","overflow"],"sources":["C:/Users/DeokHyeon/Desktop/bluejay/client/components/CommentForm.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport TextArea from 'react-textarea-autosize';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  max-height: 500px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  min-height: 50px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst ContentInput = styled(TextArea)`\r\n  width: 83%;\r\n  border: none;\r\n  padding: 8px;\r\n  font-size: 16px;\r\n  min-height: 40px;\r\n  max-height: 300px;\r\n  border-radius: 10px;\r\n  background-color: #f8f9fa;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  all: unset;\r\n  position: absolute;\r\n  background-color: #1864ab;\r\n  color: white;\r\n  letter-spacing: 2px;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  width: 70px;\r\n  height: 30px;\r\n  border-radius: 6px;\r\n  bottom: 22px;\r\n  right: 20px;\r\n  cursor: pointer;\r\n  opacity: ${props => (props.isAvailableUpload ? 1 : 0.6)};\r\n  transition: opacity 0.3s linear;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n\r\n  const [content, setContent] = useState('');\r\n  const onChangeContent = useCallback((e) => {\r\n    const {target: {value}} = e;\r\n    setContent(e.target.value);\r\n    if (value.trim()) {\r\n      setIsAvailablePosting(true);\r\n    } else if (value.length === 0 || value.length > 500) {\r\n      setIsAvailablePosting(false);\r\n    };\r\n  }, [content]);\r\n\r\n  const [isAvailablePosting, setIsAvailablePosting] = useState(false);\r\n\r\n  const onSubmit = useCallback((e) => {\r\n    e.preventDefault();\r\n    if (content.length > 500) {\r\n      alert(\"글자수가 너무 많습니다.\");\r\n      return;\r\n    }\r\n    if (!content || !content.trim()) {\r\n      return alert(\"댓글을 작성해주세요.\");\r\n    }\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: content, postId: post.id, userId: id }\r\n    });\r\n    console.log(post.id, content);\r\n  }, [content])\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onSubmit}>\r\n        <ContentInput\r\n          placeholder={ id ? \"댓글을 남겨주세요.\" : \"로그인 후 이용해주세요.\" }\r\n          disabled={ id ? false : true }\r\n          value={ content }\r\n          onChange={onChangeContent}\r\n          style={{\r\n            resize: \"none\",\r\n            outline: \"none\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        />\r\n        <SubmitButton type=\"submit\" isAvailableUpload={isAvailablePosting}>입력</SubmitButton>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CommentForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}