{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const generateDummyPost = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Comments: [{\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n}));\n\nconst dummyPost = data => ({\n  id: data.id,\n  User: {\n    id: 1,\n    nickname: 'eomdh'\n  },\n  content: data.content,\n  images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  User: {\n    id: 1,\n    nickname: 'eomdh'\n  },\n  content: data\n});\n\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const removePost = data => ({\n  type: REMOVE_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = false;\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        const post = draft.mainPosts.find(v => v.id === action.data.postId);\n        post.Comments.push(dummyComment(action.data.content));\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.data;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","faker","produce","initialState","mainPosts","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","dummyPost","data","images","dummyComment","addPost","type","removePost","addComment","reducer","state","action","draft","concat","length","error","unshift","filter","v","post","find","postId","push"],"sources":["C:/Users/DeokHyeon/Desktop/bluejay/client/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\r\nimport faker from 'faker';\r\nimport produce from 'immer';  \r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  hasMorePosts: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n  id: shortId.generate(),\r\n  User: {\r\n    id: shortId.generate(),\r\n    nickname: faker.name.findName(),\r\n  },\r\n  content: faker.lorem.paragraph(),\r\n  Images: [{\r\n    src: faker.image.image(),\r\n  }],\r\n  Comments: [{\r\n    User: {\r\n      id: shortId.generate(),\r\n      nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.sentence(),\r\n  }],\r\n}));\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'eomdh',\r\n  },\r\n  content: data.content,\r\n  images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  User: {\r\n    id: 1,\r\n    nickname: 'eomdh',\r\n  },\r\n  content: data,\r\n});\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const removePost = (data) => ({\r\n  type: REMOVE_POST_REQUEST,\r\n  data,\r\n})\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = draft.mainPosts.concat(action.data);\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(dummyPost(action.data));\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = false;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n        post.Comments.push(dummyComment(action.data.content));\r\n        break;\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.data;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n}\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}