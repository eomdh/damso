{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\n;\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(500);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n;\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"names":["all","delay","fork","put","takeLatest","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","axios","post","addPost","action","type","result","err","error","response","watchAddPost","postSaga"],"sources":["C:/Users/DeokHyeon/Desktop/bluejay/client/sagas/post.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/post', data);\r\n};\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(500);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });  \r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n};\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost)\r\n  ])\r\n}"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACEC,gBADF,EACoBC,gBADpB,EACsCC,gBADtC,EAEEC,mBAFF,EAEuBC,mBAFvB,EAE4CC,mBAF5C,QAGO,kBAHP;;AAKA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACxB,OAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACD;;AAAA;;AAED,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;EACxB,IAAI;IACF;IACA,MAAMf,KAAK,CAAC,GAAD,CAAX;IACA,MAAME,GAAG,CAAC;MACRc,IAAI,EAAEX,gBADE;MAERM,IAAI,EAAEM,MAAM,CAACN;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOO,GAAP,EAAY;IACZ,MAAMhB,GAAG,CAAC;MACRc,IAAI,EAAEV,gBADE;MAERa,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,UAAUU,YAAV,GAAyB;EACvB,MAAMlB,UAAU,CAACC,gBAAD,EAAmBU,OAAnB,CAAhB;AACD;;AAAA;AAED,eAAe,UAAUQ,QAAV,GAAqB;EAClC,MAAMvB,GAAG,CAAC,CACRE,IAAI,CAACoB,YAAD,CADI,CAAD,CAAT;AAGD"},"metadata":{},"sourceType":"module"}