{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeokHyeon\\\\Desktop\\\\damso\\\\client\\\\components\\\\PostUpdateForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport TextArea from 'react-textarea-autosize';\nimport styled from 'styled-components';\nimport { UPDATE_POST_REQUEST } from '../reducers/post';\nconst Container = styled.div.withConfig({\n  displayName: \"PostUpdateForm__Container\",\n  componentId: \"sc-1ps9m8-0\"\n})([\"display:flex;margin-top:10px;\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"PostUpdateForm__Form\",\n  componentId: \"sc-1ps9m8-1\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;width:100%;padding:10px;\"]);\nconst ContentInput = styled(TextArea).withConfig({\n  displayName: \"PostUpdateForm__ContentInput\",\n  componentId: \"sc-1ps9m8-2\"\n})([\"width:90%;border:none;font-size:16px;min-height:90px;max-height:400px;margin-bottom:10px;padding:10px;border-radius:10px;background-color:#f8f9fa;\"]);\nconst ButtonContainer = styled.div.withConfig({\n  displayName: \"PostUpdateForm__ButtonContainer\",\n  componentId: \"sc-1ps9m8-3\"\n})([\"display:flex;justify-content:flex-end;width:93%;\"]);\nconst SubmitButton = styled.button.withConfig({\n  displayName: \"PostUpdateForm__SubmitButton\",\n  componentId: \"sc-1ps9m8-4\"\n})([\"all:unset;display:flex;justify-content:center;align-items:center;width:60px;height:30px;background-color:#1864ab;border-radius:6px;color:white;cursor:pointer;outline:none;opacity:\", \";transition:all 0.2s linear;\"], props => props.isAvailablePosting ? 1 : 0.6);\nconst CancelButton = styled.button.withConfig({\n  displayName: \"PostUpdateForm__CancelButton\",\n  componentId: \"sc-1ps9m8-5\"\n})([\"all:unset;display:flex;justify-content:center;align-items:center;width:60px;height:30px;margin-left:5px;background-color:#e8537c;border-radius:6px;color:white;cursor:pointer;outline:none;opacity:0.6;&:hover{opacity:1;}transition:all 0.2s linear;\"]);\n\nconst PostUpdateForm = ({\n  postId,\n  postContent,\n  setEditMode\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: contentInput,\n    1: setContentInput\n  } = useState(postContent);\n  const {\n    0: isAvailablePosting,\n    1: setIsAvailablePosting\n  } = useState(false);\n  const onChangeContent = useCallback(e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setContentInput(e.target.value);\n\n    if (value.trim()) {\n      setIsAvailablePosting(true);\n    } else if (value.length === 0 || value.length > 500) {\n      setIsAvailablePosting(false);\n    }\n\n    ;\n  }, [contentInput]);\n  const onCancelUpdate = useCallback(() => {\n    setEditMode(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (!contentInput || !contentInput.trim()) {\n      return alert('글을 작성해주세요.');\n    }\n\n    ;\n\n    if (contentInput.length > 500) {\n      return alert('글자수가 너무 많습니다.');\n    }\n\n    ;\n    dispatch({\n      type: UPDATE_POST_REQUEST,\n      data: {\n        postId: postId,\n        content: contentInput\n      }\n    });\n    setEditMode(prev => !prev);\n  }, [contentInput]);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(ContentInput, {\n    value: contentInput,\n    onChange: onChangeContent,\n    style: {\n      resize: \"none\",\n      outline: \"none\",\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), __jsx(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(SubmitButton, {\n    type: \"submit\",\n    isAvailablePosting: isAvailablePosting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"\\uC218\\uC815\"), __jsx(CancelButton, {\n    onClick: onCancelUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"\\uCDE8\\uC18C\"))));\n};\n\nPostUpdateForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  postContent: PropTypes.string.isRequired,\n  setEditMode: PropTypes.func.isRequired\n};\nexport default PostUpdateForm;","map":{"version":3,"names":["React","useCallback","useState","PropTypes","useDispatch","TextArea","styled","UPDATE_POST_REQUEST","Container","div","Form","form","ContentInput","ButtonContainer","SubmitButton","button","props","isAvailablePosting","CancelButton","PostUpdateForm","postId","postContent","setEditMode","dispatch","contentInput","setContentInput","setIsAvailablePosting","onChangeContent","e","target","value","trim","length","onCancelUpdate","onSubmit","alert","type","data","content","prev","resize","outline","overflow","propTypes","number","isRequired","string","func"],"sources":["C:/Users/DeokHyeon/Desktop/damso/client/components/PostUpdateForm.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport TextArea from 'react-textarea-autosize';\r\n\r\nimport styled from 'styled-components';\r\nimport { UPDATE_POST_REQUEST } from '../reducers/post';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\n\r\nconst ContentInput = styled(TextArea)`\r\n  width: 90%;\r\n  border: none;\r\n  font-size: 16px;\r\n  min-height: 90px;\r\n  max-height: 400px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  background-color: #f8f9fa;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 93%;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  all: unset;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60px;\r\n  height: 30px; \r\n  background-color: #1864ab;\r\n  border-radius: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  outline: none;\r\n  opacity: ${props => (props.isAvailablePosting ? 1 : 0.6)};\r\n  transition: all 0.2s linear;\r\n`;\r\n\r\nconst CancelButton = styled.button`\r\n  all: unset;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60px;\r\n  height: 30px; \r\n  margin-left: 5px;\r\n  background-color: #e8537c;\r\n  border-radius: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  outline: none;\r\n  opacity: 0.6;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n  transition: all 0.2s linear;\r\n`;\r\n\r\nconst PostUpdateForm = ({ postId, postContent, setEditMode }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [contentInput, setContentInput] = useState(postContent);\r\n  const [isAvailablePosting, setIsAvailablePosting] = useState(false);\r\n\r\n  const onChangeContent = useCallback((e) => {\r\n    const {target: {value}} = e;\r\n    setContentInput(e.target.value);\r\n    if (value.trim()) {\r\n      setIsAvailablePosting(true);\r\n    } else if (value.length === 0 || value.length > 500) {\r\n      setIsAvailablePosting(false);\r\n    };\r\n  }, [contentInput]);\r\n\r\n  const onCancelUpdate = useCallback(() => {\r\n    setEditMode(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (!contentInput || !contentInput.trim() ) {\r\n      return alert('글을 작성해주세요.')\r\n    };\r\n    \r\n    if (contentInput.length > 500) {\r\n      return alert('글자수가 너무 많습니다.');\r\n    };\r\n\r\n    dispatch({\r\n      type: UPDATE_POST_REQUEST,\r\n      data: {\r\n        postId: postId,\r\n        content: contentInput,\r\n      }\r\n    });\r\n\r\n    setEditMode(prev => !prev);\r\n  }, [contentInput]);\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onSubmit}>\r\n        <ContentInput\r\n          value={contentInput}\r\n          onChange={onChangeContent}\r\n          style={{\r\n            resize: \"none\",\r\n            outline: \"none\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        />\r\n        <ButtonContainer>\r\n          <SubmitButton type=\"submit\" isAvailablePosting={isAvailablePosting}>수정</SubmitButton>\r\n          <CancelButton onClick={onCancelUpdate}>취소</CancelButton>\r\n        </ButtonContainer>\r\n      </Form>\r\n    </Container>\r\n  )\r\n};\r\n\r\nPostUpdateForm.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  postContent: PropTypes.string.isRequired,\r\n  setEditMode: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostUpdateForm;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,QAAoC,kBAApC;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV;EAAA;EAAA;AAAA,qCAAf;AAKA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,IAAV;EAAA;EAAA;AAAA,6GAAV;AASA,MAAMC,YAAY,GAAGN,MAAM,CAACD,QAAD,CAAT;EAAA;EAAA;AAAA,0JAAlB;AAYA,MAAMQ,eAAe,GAAGP,MAAM,CAACG,GAAV;EAAA;EAAA;AAAA,wDAArB;AAMA,MAAMK,YAAY,GAAGR,MAAM,CAACS,MAAV;EAAA;EAAA;AAAA,4NAYLC,KAAK,IAAKA,KAAK,CAACC,kBAAN,GAA2B,CAA3B,GAA+B,GAZpC,CAAlB;AAgBA,MAAMC,YAAY,GAAGZ,MAAM,CAACS,MAAV;EAAA;EAAA;AAAA,6PAAlB;;AAoBA,MAAMI,cAAc,GAAG,CAAC;EAAEC,MAAF;EAAUC,WAAV;EAAuBC;AAAvB,CAAD,KAA0C;EAC/D,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;EAEA,MAAM;IAAA,GAACoB,YAAD;IAAA,GAAeC;EAAf,IAAkCvB,QAAQ,CAACmB,WAAD,CAAhD;EACA,MAAM;IAAA,GAACJ,kBAAD;IAAA,GAAqBS;EAArB,IAA8CxB,QAAQ,CAAC,KAAD,CAA5D;EAEA,MAAMyB,eAAe,GAAG1B,WAAW,CAAE2B,CAAD,IAAO;IACzC,MAAM;MAACC,MAAM,EAAE;QAACC;MAAD;IAAT,IAAoBF,CAA1B;IACAH,eAAe,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;;IACA,IAAIA,KAAK,CAACC,IAAN,EAAJ,EAAkB;MAChBL,qBAAqB,CAAC,IAAD,CAArB;IACD,CAFD,MAEO,IAAII,KAAK,CAACE,MAAN,KAAiB,CAAjB,IAAsBF,KAAK,CAACE,MAAN,GAAe,GAAzC,EAA8C;MACnDN,qBAAqB,CAAC,KAAD,CAArB;IACD;;IAAA;EACF,CARkC,EAQhC,CAACF,YAAD,CARgC,CAAnC;EAUA,MAAMS,cAAc,GAAGhC,WAAW,CAAC,MAAM;IACvCqB,WAAW,CAAC,KAAD,CAAX;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,MAAMY,QAAQ,GAAGjC,WAAW,CAAC,MAAM;IACjC,IAAI,CAACuB,YAAD,IAAiB,CAACA,YAAY,CAACO,IAAb,EAAtB,EAA4C;MAC1C,OAAOI,KAAK,CAAC,YAAD,CAAZ;IACD;;IAAA;;IAED,IAAIX,YAAY,CAACQ,MAAb,GAAsB,GAA1B,EAA+B;MAC7B,OAAOG,KAAK,CAAC,eAAD,CAAZ;IACD;;IAAA;IAEDZ,QAAQ,CAAC;MACPa,IAAI,EAAE7B,mBADC;MAEP8B,IAAI,EAAE;QACJjB,MAAM,EAAEA,MADJ;QAEJkB,OAAO,EAAEd;MAFL;IAFC,CAAD,CAAR;IAQAF,WAAW,CAACiB,IAAI,IAAI,CAACA,IAAV,CAAX;EACD,CAlB2B,EAkBzB,CAACf,YAAD,CAlByB,CAA5B;EAoBA,OACE,MAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAD;IAAM,QAAQ,EAAEU,QAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,YAAD;IACE,KAAK,EAAEV,YADT;IAEE,QAAQ,EAAEG,eAFZ;IAGE,KAAK,EAAE;MACLa,MAAM,EAAE,MADH;MAELC,OAAO,EAAE,MAFJ;MAGLC,QAAQ,EAAE;IAHL,CAHT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAUE,MAAC,eAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,YAAD;IAAc,IAAI,EAAC,QAAnB;IAA4B,kBAAkB,EAAEzB,kBAAhD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,EAEE,MAAC,YAAD;IAAc,OAAO,EAAEgB,cAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAFF,CAVF,CADF,CADF;AAmBD,CA3DD;;AA6DAd,cAAc,CAACwB,SAAf,GAA2B;EACzBvB,MAAM,EAAEjB,SAAS,CAACyC,MAAV,CAAiBC,UADA;EAEzBxB,WAAW,EAAElB,SAAS,CAAC2C,MAAV,CAAiBD,UAFL;EAGzBvB,WAAW,EAAEnB,SAAS,CAAC4C,IAAV,CAAeF;AAHH,CAA3B;AAMA,eAAe1B,cAAf"},"metadata":{},"sourceType":"module"}