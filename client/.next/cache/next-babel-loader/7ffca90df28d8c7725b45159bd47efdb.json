{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DeokHyeon\\\\Desktop\\\\damso\\\\client\\\\components\\\\CommentUpdateForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { UPDATE_COMMENT_REQUEST } from '../reducers/post';\nimport TextArea from 'react-textarea-autosize';\nimport styled from 'styled-components';\nvar Container = styled.div.withConfig({\n  displayName: \"CommentUpdateForm__Container\",\n  componentId: \"sc-1hhyv42-0\"\n})([\"display:flex;margin-top:15px;\"]);\n_c = Container;\nvar Form = styled.form.withConfig({\n  displayName: \"CommentUpdateForm__Form\",\n  componentId: \"sc-1hhyv42-1\"\n})([\"width:100%;min-height:50px;padding:10px;display:flex;flex-direction:column;position:relative;\"]);\n_c2 = Form;\nvar ContentInput = styled(TextArea).withConfig({\n  displayName: \"CommentUpdateForm__ContentInput\",\n  componentId: \"sc-1hhyv42-2\"\n})([\"border:none;padding:8px;margin-right:13px;font-size:16px;min-height:40px;max-height:300px;border-radius:10px;background-color:#f8f9fa;\"]);\n_c3 = ContentInput;\nvar ButtonContainer = styled.div.withConfig({\n  displayName: \"CommentUpdateForm__ButtonContainer\",\n  componentId: \"sc-1hhyv42-3\"\n})([\"display:flex;justify-content:flex-end;margin-right:13px;margin-top:7px;\"]);\n_c4 = ButtonContainer;\nvar SubmitButton = styled.button.withConfig({\n  displayName: \"CommentUpdateForm__SubmitButton\",\n  componentId: \"sc-1hhyv42-4\"\n})([\"all:unset;display:flex;justify-content:center;align-items:center;width:60px;height:30px;background-color:#1864ab;border-radius:6px;color:white;cursor:pointer;outline:none;opacity:\", \";transition:all 0.2s linear;\"], function (props) {\n  return props.isAvailablePosting ? 1 : 0.6;\n});\n_c5 = SubmitButton;\nvar CancelButton = styled.button.withConfig({\n  displayName: \"CommentUpdateForm__CancelButton\",\n  componentId: \"sc-1hhyv42-5\"\n})([\"all:unset;display:flex;justify-content:center;align-items:center;width:60px;height:30px;margin-left:5px;background-color:#e8537c;border-radius:6px;color:white;cursor:pointer;outline:none;opacity:0.6;&:hover{opacity:1;}transition:all 0.2s linear;\"]);\n_c6 = CancelButton;\n\nvar CommentUpdateForm = function CommentUpdateForm(_ref) {\n  _s();\n\n  var commentId = _ref.commentId,\n      commentContent = _ref.commentContent,\n      setEditMode = _ref.setEditMode;\n  var dispatch = useDispatch();\n\n  var _useState = useState(commentContent),\n      commentInput = _useState[0],\n      setCommentInput = _useState[1];\n\n  var _useState2 = useState(false),\n      isAvailablePosting = _useState2[0],\n      setIsAvailablePosting = _useState2[1];\n\n  var onChangeComment = useCallback(function (e) {\n    var value = e.target.value;\n    setCommentInput(e.target.value);\n\n    if (value.trim()) {\n      setIsAvailablePosting(true);\n    } else if (value.length === 0 || value.length > 500) {\n      setIsAvailablePosting(false);\n    }\n\n    ;\n  }, [commentInput]);\n  var onCancelUpdate = useCallback(function () {\n    setEditMode(false);\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: UPDATE_COMMENT_REQUEST,\n      data: {\n        commentId: commentId,\n        content: ContentInput\n      }\n    });\n  }, [ContentInput]);\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(ContentInput, {\n    value: commentInput,\n    onChange: onChangeComment,\n    style: {\n      resize: \"none\",\n      outline: \"none\",\n      overflow: \"hidden\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), __jsx(ButtonContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(SubmitButton, {\n    type: \"submit\",\n    isAvailablePosting: isAvailablePosting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"\\uC218\\uC815\"), __jsx(CancelButton, {\n    onClick: onCancelUpdate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"\\uCDE8\\uC18C\"))));\n};\n\n_s(CommentUpdateForm, \"fTFmdlxKXDSGRoL0pxden1o7dFg=\", false, function () {\n  return [useDispatch];\n});\n\n_c7 = CommentUpdateForm;\nCommentUpdateForm.propTypes = {\n  commentId: PropTypes.number.isRequired,\n  commentContent: PropTypes.string.isRequired,\n  setEditMode: PropTypes.func.isRequired\n};\nexport default CommentUpdateForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"ContentInput\");\n$RefreshReg$(_c4, \"ButtonContainer\");\n$RefreshReg$(_c5, \"SubmitButton\");\n$RefreshReg$(_c6, \"CancelButton\");\n$RefreshReg$(_c7, \"CommentUpdateForm\");","map":{"version":3,"names":["React","useCallback","useState","PropTypes","useDispatch","UPDATE_COMMENT_REQUEST","TextArea","styled","Container","div","Form","form","ContentInput","ButtonContainer","SubmitButton","button","props","isAvailablePosting","CancelButton","CommentUpdateForm","commentId","commentContent","setEditMode","dispatch","commentInput","setCommentInput","setIsAvailablePosting","onChangeComment","e","value","target","trim","length","onCancelUpdate","onSubmit","type","data","content","resize","outline","overflow","propTypes","number","isRequired","string","func"],"sources":["C:/Users/DeokHyeon/Desktop/damso/client/components/CommentUpdateForm.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UPDATE_COMMENT_REQUEST } from '../reducers/post'\r\nimport TextArea from 'react-textarea-autosize';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  min-height: 50px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst ContentInput = styled(TextArea)`\r\n  border: none;\r\n  padding: 8px;\r\n  margin-right: 13px;\r\n  font-size: 16px;\r\n  min-height: 40px;\r\n  max-height: 300px;\r\n  border-radius: 10px;\r\n  background-color: #f8f9fa;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-right: 13px;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  all: unset;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60px;\r\n  height: 30px; \r\n  background-color: #1864ab;\r\n  border-radius: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  outline: none;\r\n  opacity: ${props => (props.isAvailablePosting ? 1 : 0.6)};\r\n  transition: all 0.2s linear;\r\n`;\r\n\r\nconst CancelButton = styled.button`\r\n  all: unset;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60px;\r\n  height: 30px; \r\n  margin-left: 5px;\r\n  background-color: #e8537c;\r\n  border-radius: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  outline: none;\r\n  opacity: 0.6;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n  transition: all 0.2s linear;\r\n`;\r\n\r\n\r\nconst CommentUpdateForm = ({ commentId, commentContent, setEditMode }) => {\r\n  const dispatch = useDispatch();\r\n  const [commentInput, setCommentInput] = useState(commentContent);\r\n  const [isAvailablePosting, setIsAvailablePosting] = useState(false);\r\n\r\n  const onChangeComment = useCallback((e) => {\r\n    const {target: {value}} = e;\r\n    setCommentInput(e.target.value);\r\n    if (value.trim()) {\r\n      setIsAvailablePosting(true);\r\n    } else if (value.length === 0 || value.length > 500) {\r\n      setIsAvailablePosting(false);\r\n    };\r\n  }, [commentInput]);\r\n\r\n  const onCancelUpdate = useCallback(() => {\r\n    setEditMode(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch ({\r\n      type: UPDATE_COMMENT_REQUEST,\r\n      data: {\r\n        commentId: commentId,\r\n        content: ContentInput,\r\n      }\r\n    });\r\n  }, [ContentInput]);\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onSubmit}>\r\n        <ContentInput \r\n          value={commentInput}\r\n          onChange={onChangeComment}\r\n          style={{\r\n            resize: \"none\",\r\n            outline: \"none\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        />\r\n        <ButtonContainer>\r\n          <SubmitButton type=\"submit\" isAvailablePosting={isAvailablePosting}>수정</SubmitButton>\r\n          <CancelButton onClick={onCancelUpdate}>취소</CancelButton>\r\n        </ButtonContainer>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCommentUpdateForm.propTypes = {\r\n  commentId: PropTypes.number.isRequired,\r\n  commentContent: PropTypes.string.isRequired,\r\n  setEditMode: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CommentUpdateForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}