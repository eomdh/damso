{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/api/login', data);\n}\n\n;\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(500);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction logoutAPI() {\n  return axios.post('/api/logout');\n}\n\n;\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logoutAPI);\n    yield delay(500);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction* signUp() {\n  try {\n    // const result = yield call(logoutAPI);\n    yield delay(500);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\n;\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\n;\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n;\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n;","map":{"version":3,"names":["all","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","data","axios","post","logIn","action","type","err","error","response","logoutAPI","logOut","signUp","watchLogIn","watchLogOut","watchSignUp","userSaga"],"sources":["C:/Users/DeokHyeon/Desktop/bluejay/client/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post('/api/login', data);\r\n};\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(loginAPI, action.data);\r\n    yield delay(500);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    });  \r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction logoutAPI() {\r\n  return axios.post('/api/logout');\r\n};\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logoutAPI);\r\n    yield delay(500);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });  \r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction* signUp() {\r\n  try {\r\n    // const result = yield call(logoutAPI);\r\n    yield delay(500);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });  \r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n};\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n};\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n};\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp)\r\n  ]);\r\n};"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACEC,cADF,EACkBC,cADlB,EACkCC,cADlC,EAEEC,eAFF,EAEmBC,eAFnB,EAEoCC,eAFpC,EAGEC,eAHF,EAGmBC,eAHnB,EAGoCC,eAHpC,QAIO,kBAJP;;AAMA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,OAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAP;AACD;;AAAA;;AAED,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;EACtB,IAAI;IACF;IACA,MAAMlB,KAAK,CAAC,GAAD,CAAX;IACA,MAAME,GAAG,CAAC;MACRiB,IAAI,EAAEd,cADE;MAERS,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOM,GAAP,EAAY;IACZ,MAAMlB,GAAG,CAAC;MACRiB,IAAI,EAAEb,cADE;MAERe,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASS,SAAT,GAAqB;EACnB,OAAOR,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAAA;;AAED,UAAUQ,MAAV,GAAmB;EACjB,IAAI;IACF;IACA,MAAMxB,KAAK,CAAC,GAAD,CAAX;IACA,MAAME,GAAG,CAAC;MACRiB,IAAI,EAAEX;IADE,CAAD,CAAT;EAGD,CAND,CAME,OAAOY,GAAP,EAAY;IACZ,MAAMlB,GAAG,CAAC;MACRiB,IAAI,EAAEV,eADE;MAERY,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,UAAUW,MAAV,GAAmB;EACjB,IAAI;IACF;IACA,MAAMzB,KAAK,CAAC,GAAD,CAAX;IACA,MAAME,GAAG,CAAC;MACRiB,IAAI,EAAEX;IADE,CAAD,CAAT;EAGD,CAND,CAME,OAAOY,GAAP,EAAY;IACZ,MAAMlB,GAAG,CAAC;MACRiB,IAAI,EAAEV,eADE;MAERY,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,UAAUY,UAAV,GAAuB;EACrB,MAAMvB,UAAU,CAACC,cAAD,EAAiBa,KAAjB,CAAhB;AACD;;AAAA;;AAED,UAAUU,WAAV,GAAwB;EACtB,MAAMxB,UAAU,CAACI,eAAD,EAAkBiB,MAAlB,CAAhB;AACD;;AAAA;;AAED,UAAUI,WAAV,GAAwB;EACtB,MAAMzB,UAAU,CAACO,eAAD,EAAkBe,MAAlB,CAAhB;AACD;;AAAA;AAED,eAAe,UAAUI,QAAV,GAAqB;EAClC,MAAM9B,GAAG,CAAC,CACRE,IAAI,CAACyB,UAAD,CADI,EAERzB,IAAI,CAAC0B,WAAD,CAFI,EAGR1B,IAAI,CAAC2B,WAAD,CAHI,CAAD,CAAT;AAKD;AAAA"},"metadata":{},"sourceType":"module"}