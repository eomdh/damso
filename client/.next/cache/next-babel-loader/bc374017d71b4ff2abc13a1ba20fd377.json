{"ast":null,"code":"import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, UPDATE_POST_REQUEST, UPDATE_POST_SUCCESS, UPDATE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, UPDATE_COMMENT_REQUEST, UPDATE_COMMENT_SUCCESS, UPDATE_COMMENT_FAILURE, REMOVE_COMMENT_REQUEST, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_OF_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\n;\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\n;\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\n;\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\n;\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction addPostAPI(data) {\n  return axios.post('/post/add', data);\n}\n\n;\n\nfunction* addPost(action) {\n  try {\n    console.log(\"작성 데이터\", action.data);\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_OF_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction updatePostAPI(data) {\n  return axios.patch(`/post/${data.postId}/update`, data);\n}\n\n;\n\nfunction* updatePost(action) {\n  try {\n    console.log(\"업데이트 데이터\", action.data);\n    const result = yield call(updatePostAPI, action.data);\n    yield put({\n      type: UPDATE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPDATE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}/delete`);\n}\n\n;\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction uploadImagesAPI(data) {\n  return axios.post('post/images', data);\n}\n\n;\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment/add`, data);\n}\n\n;\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction updateCommentAPI(data) {\n  return axios.patch(`/post/${data.postId}/comment/${data.commentId}/update`, data);\n}\n\n;\n\nfunction* updateComment(action) {\n  try {\n    const result = yield call(updateCommentAPI, action.data);\n    yield put({\n      type: UPDATE_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPDATE_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction removeCommentAPI(data) {\n  return axios.delete(`/post/${data.postId}/comment/${data.commentId}/delete`, data);\n}\n\n;\n\nfunction* removeComment(action) {\n  try {\n    const result = yield call(removeCommentAPI, action.data);\n    yield put({\n      type: REMOVE_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\n;\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\n;\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\n;\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\n;\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\n;\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\n;\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n;\n\nfunction* watchUpdatePost() {\n  yield takeLatest(UPDATE_POST_REQUEST, updatePost);\n}\n\n;\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\n;\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\n;\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\n;\n\nfunction* watchUpdateComment() {\n  yield takeLatest(UPDATE_COMMENT_REQUEST, updateComment);\n}\n\n;\n\nfunction* watchRemoveComment() {\n  yield takeLatest(REMOVE_COMMENT_REQUEST, removeComment);\n}\n\n;\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\n;\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\n;\nexport default function* postSaga() {\n  yield all([fork(watchLoadPost), fork(watchLoadPosts), fork(watchLoadUserPosts), fork(watchLoadHashtagPosts), fork(watchAddPost), fork(watchUpdatePost), fork(watchRemovePost), fork(watchUploadImages), fork(watchAddComment), fork(watchUpdateComment), fork(watchRemoveComment), fork(watchLikePost), fork(watchUnlikePost)]);\n}\n;","map":{"version":3,"names":["all","call","fork","put","takeLatest","axios","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","UPDATE_COMMENT_REQUEST","UPDATE_COMMENT_SUCCESS","UPDATE_COMMENT_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_OF_ME","REMOVE_POST_OF_ME","loadPostAPI","data","get","loadPost","action","result","type","err","console","error","response","loadPostsAPI","lastId","loadPosts","loadUserPostsAPI","loadUserPosts","loadHashtagPostsAPI","encodeURIComponent","loadHashtagPosts","addPostAPI","post","addPost","log","id","updatePostAPI","patch","postId","updatePost","removePostAPI","delete","removePost","uploadImagesAPI","uploadImages","addCommentAPI","addComment","updateCommentAPI","commentId","updateComment","removeCommentAPI","removeComment","likePostAPI","likePost","unlikePostAPI","unlikePost","watchLoadPost","watchLoadPosts","watchLoadUserPosts","watchLoadHashtagPosts","watchAddPost","watchUpdatePost","watchRemovePost","watchUploadImages","watchAddComment","watchUpdateComment","watchRemoveComment","watchLikePost","watchUnlikePost","postSaga"],"sources":["C:/Users/DeokHyeon/Desktop/damso/client/sagas/post.js"],"sourcesContent":["import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport {\r\n  LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE,\r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\r\n  LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE,\r\n  LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE,\r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  UPDATE_POST_REQUEST, UPDATE_POST_SUCCESS, UPDATE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n  UPDATE_COMMENT_REQUEST, UPDATE_COMMENT_SUCCESS, UPDATE_COMMENT_FAILURE,\r\n  REMOVE_COMMENT_REQUEST, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_FAILURE,\r\n  LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE,\r\n} from '../reducers/post';\r\nimport { ADD_POST_OF_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n};\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction loadPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n};\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.lastId);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction loadUserPostsAPI(data, lastId) {\r\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\r\n};\r\n\r\nfunction* loadUserPosts(action) {\r\n  try {\r\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\r\n    yield put({\r\n      type: LOAD_USER_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_USER_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction loadHashtagPostsAPI(data, lastId) {\r\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\r\n};\r\n\r\nfunction* loadHashtagPosts(action) {\r\n  try {\r\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n    yield put({\r\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_HASHTAG_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post/add', data);\r\n};\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    console.log(\"작성 데이터\", action.data);\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_OF_ME,\r\n      data: result.data.id,\r\n    })\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction updatePostAPI(data) {\r\n  return axios.patch(`/post/${data.postId}/update`, data);\r\n};\r\n\r\nfunction* updatePost(action) {\r\n  try {\r\n    console.log(\"업데이트 데이터\", action.data);\r\n    const result = yield call(updatePostAPI, action.data);\r\n    yield put({\r\n      type: UPDATE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPDATE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}/delete`);\r\n};\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    })\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('post/images', data);\r\n};\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment/add`, data);\r\n};\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });  \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction updateCommentAPI(data) {\r\n  return axios.patch(`/post/${data.postId}/comment/${data.commentId}/update`, data);\r\n};\r\n\r\nfunction* updateComment(action) {\r\n  try {\r\n    const result = yield call(updateCommentAPI, action.data);\r\n    yield put({\r\n      type: UPDATE_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });  \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPDATE_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction removeCommentAPI(data) {\r\n  return axios.delete(`/post/${data.postId}/comment/${data.commentId}/delete`, data);\r\n};\r\n\r\nfunction* removeComment(action) {\r\n  try {\r\n    const result = yield call(removeCommentAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });  \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n};\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });  \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n};\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });  \r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n};\r\n\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n};\r\n\r\nfunction* watchLoadUserPosts() {\r\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n};\r\n\r\nfunction* watchLoadHashtagPosts() {\r\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n};\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n};\r\n\r\nfunction* watchUpdatePost() {\r\n  yield takeLatest(UPDATE_POST_REQUEST, updatePost);\r\n};\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n};\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n};\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n};\r\n\r\nfunction* watchUpdateComment() {\r\n  yield takeLatest(UPDATE_COMMENT_REQUEST, updateComment);\r\n};\r\n\r\nfunction* watchRemoveComment() {\r\n  yield takeLatest(REMOVE_COMMENT_REQUEST, removeComment);\r\n};\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n};\r\n\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n};\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchLoadPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLoadUserPosts),\r\n    fork(watchLoadHashtagPosts),\r\n    fork(watchAddPost),\r\n    fork(watchUpdatePost),\r\n    fork(watchRemovePost),\r\n    fork(watchUploadImages),\r\n    fork(watchAddComment),\r\n    fork(watchUpdateComment),\r\n    fork(watchRemoveComment),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost)\r\n  ])\r\n};"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EACqBC,iBADrB,EACwCC,iBADxC,EAEEC,kBAFF,EAEsBC,kBAFtB,EAE0CC,kBAF1C,EAGEC,uBAHF,EAG2BC,uBAH3B,EAGoDC,uBAHpD,EAIEC,0BAJF,EAI8BC,0BAJ9B,EAI0DC,0BAJ1D,EAKEC,gBALF,EAKoBC,gBALpB,EAKsCC,gBALtC,EAMEC,mBANF,EAMuBC,mBANvB,EAM4CC,mBAN5C,EAOEC,mBAPF,EAOuBC,mBAPvB,EAO4CC,mBAP5C,EAQEC,qBARF,EAQyBC,qBARzB,EAQgDC,qBARhD,EASEC,mBATF,EASuBC,mBATvB,EAS4CC,mBAT5C,EAUEC,sBAVF,EAU0BC,sBAV1B,EAUkDC,sBAVlD,EAWEC,sBAXF,EAW0BC,sBAX1B,EAWkDC,sBAXlD,EAYEC,iBAZF,EAYqBC,iBAZrB,EAYwCC,iBAZxC,EAaEC,mBAbF,EAauBC,mBAbvB,EAa4CC,mBAb5C,QAcO,kBAdP;AAeA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,kBAAlD;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACzB,OAAO3C,KAAK,CAAC4C,GAAN,CAAW,SAAQD,IAAK,EAAxB,CAAP;AACD;;AAAA;;AAED,UAAUE,QAAV,CAAmBC,MAAnB,EAA2B;EACzB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAAC8C,WAAD,EAAcI,MAAM,CAACH,IAArB,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAE9C,iBADE;MAERyC,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAE7C,iBADE;MAERgD,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASU,YAAT,CAAsBC,MAAtB,EAA8B;EAC5B,OAAOtD,KAAK,CAAC4C,GAAN,CAAW,iBAAgBU,MAAM,IAAI,CAAE,EAAvC,CAAP;AACD;;AAAA;;AAED,UAAUC,SAAV,CAAoBT,MAApB,EAA4B;EAC1B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAACyD,YAAD,EAAeP,MAAM,CAACQ,MAAtB,CAAzB;IACA,MAAMxD,GAAG,CAAC;MACRkD,IAAI,EAAE3C,kBADE;MAERsC,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAE1C,kBADE;MAER6C,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASa,gBAAT,CAA0Bb,IAA1B,EAAgCW,MAAhC,EAAwC;EACtC,OAAOtD,KAAK,CAAC4C,GAAN,CAAW,SAAQD,IAAK,iBAAgBW,MAAM,IAAI,CAAE,EAApD,CAAP;AACD;;AAAA;;AAED,UAAUG,aAAV,CAAwBX,MAAxB,EAAgC;EAC9B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAAC4D,gBAAD,EAAmBV,MAAM,CAACH,IAA1B,EAAgCG,MAAM,CAACQ,MAAvC,CAAzB;IACA,MAAMxD,GAAG,CAAC;MACRkD,IAAI,EAAExC,uBADE;MAERmC,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAEvC,uBADE;MAER0C,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASe,mBAAT,CAA6Bf,IAA7B,EAAmCW,MAAnC,EAA2C;EACzC,OAAOtD,KAAK,CAAC4C,GAAN,CAAW,YAAWe,kBAAkB,CAAChB,IAAD,CAAO,WAAUW,MAAM,IAAI,CAAE,EAArE,CAAP;AACD;;AAAA;;AAED,UAAUM,gBAAV,CAA2Bd,MAA3B,EAAmC;EACjC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAAC8D,mBAAD,EAAsBZ,MAAM,CAACH,IAA7B,EAAmCG,MAAM,CAACQ,MAA1C,CAAzB;IACA,MAAMxD,GAAG,CAAC;MACRkD,IAAI,EAAErC,0BADE;MAERgC,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAEpC,0BADE;MAERuC,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASkB,UAAT,CAAoBlB,IAApB,EAA0B;EACxB,OAAO3C,KAAK,CAAC8D,IAAN,CAAW,WAAX,EAAwBnB,IAAxB,CAAP;AACD;;AAAA;;AAED,UAAUoB,OAAV,CAAkBjB,MAAlB,EAA0B;EACxB,IAAI;IACFI,OAAO,CAACc,GAAR,CAAY,QAAZ,EAAsBlB,MAAM,CAACH,IAA7B;IACA,MAAMI,MAAM,GAAG,MAAMnD,IAAI,CAACiE,UAAD,EAAaf,MAAM,CAACH,IAApB,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAElC,gBADE;MAER6B,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;IAIA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAER,cADE;MAERG,IAAI,EAAEI,MAAM,CAACJ,IAAP,CAAYsB;IAFV,CAAD,CAAT;EAID,CAXD,CAWE,OAAOhB,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAEjC,gBADE;MAERoC,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASuB,aAAT,CAAuBvB,IAAvB,EAA6B;EAC3B,OAAO3C,KAAK,CAACmE,KAAN,CAAa,SAAQxB,IAAI,CAACyB,MAAO,SAAjC,EAA2CzB,IAA3C,CAAP;AACD;;AAAA;;AAED,UAAU0B,UAAV,CAAqBvB,MAArB,EAA6B;EAC3B,IAAI;IACFI,OAAO,CAACc,GAAR,CAAY,UAAZ,EAAwBlB,MAAM,CAACH,IAA/B;IACA,MAAMI,MAAM,GAAG,MAAMnD,IAAI,CAACsE,aAAD,EAAgBpB,MAAM,CAACH,IAAvB,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAE/B,mBADE;MAER0B,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAE9B,mBADE;MAERiC,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAAS2B,aAAT,CAAuB3B,IAAvB,EAA6B;EAC3B,OAAO3C,KAAK,CAACuE,MAAN,CAAc,SAAQ5B,IAAK,SAA3B,CAAP;AACD;;AAAA;;AAED,UAAU6B,UAAV,CAAqB1B,MAArB,EAA6B;EAC3B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAAC0E,aAAD,EAAgBxB,MAAM,CAACH,IAAvB,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAE5B,mBADE;MAERuB,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;IAIA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAEP,iBADE;MAERE,IAAI,EAAEG,MAAM,CAACH;IAFL,CAAD,CAAT;EAID,CAVD,CAUE,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAE3B,mBADE;MAER8B,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAAS8B,eAAT,CAAyB9B,IAAzB,EAA+B;EAC7B,OAAO3C,KAAK,CAAC8D,IAAN,CAAW,aAAX,EAA0BnB,IAA1B,CAAP;AACD;;AAAA;;AAED,UAAU+B,YAAV,CAAuB5B,MAAvB,EAA+B;EAC7B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAAC6E,eAAD,EAAkB3B,MAAM,CAACH,IAAzB,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAEzB,qBADE;MAERoB,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAExB,qBADE;MAER2B,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASgC,aAAT,CAAuBhC,IAAvB,EAA6B;EAC3B,OAAO3C,KAAK,CAAC8D,IAAN,CAAY,SAAQnB,IAAI,CAACyB,MAAO,cAAhC,EAA+CzB,IAA/C,CAAP;AACD;;AAAA;;AAED,UAAUiC,UAAV,CAAqB9B,MAArB,EAA6B;EAC3B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAAC+E,aAAD,EAAgB7B,MAAM,CAACH,IAAvB,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAEtB,mBADE;MAERiB,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAErB,mBADE;MAERwB,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASkC,gBAAT,CAA0BlC,IAA1B,EAAgC;EAC9B,OAAO3C,KAAK,CAACmE,KAAN,CAAa,SAAQxB,IAAI,CAACyB,MAAO,YAAWzB,IAAI,CAACmC,SAAU,SAA3D,EAAqEnC,IAArE,CAAP;AACD;;AAAA;;AAED,UAAUoC,aAAV,CAAwBjC,MAAxB,EAAgC;EAC9B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAACiF,gBAAD,EAAmB/B,MAAM,CAACH,IAA1B,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAEnB,sBADE;MAERc,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAElB,sBADE;MAERqB,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASqC,gBAAT,CAA0BrC,IAA1B,EAAgC;EAC9B,OAAO3C,KAAK,CAACuE,MAAN,CAAc,SAAQ5B,IAAI,CAACyB,MAAO,YAAWzB,IAAI,CAACmC,SAAU,SAA5D,EAAsEnC,IAAtE,CAAP;AACD;;AAAA;;AAED,UAAUsC,aAAV,CAAwBnC,MAAxB,EAAgC;EAC9B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAACoF,gBAAD,EAAmBlC,MAAM,CAACH,IAA1B,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAEhB,sBADE;MAERW,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAEf,sBADE;MAERkB,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASuC,WAAT,CAAqBvC,IAArB,EAA2B;EACzB,OAAO3C,KAAK,CAACmE,KAAN,CAAa,SAAQxB,IAAK,OAA1B,CAAP;AACD;;AAAA;;AAED,UAAUwC,QAAV,CAAmBrC,MAAnB,EAA2B;EACzB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAACsF,WAAD,EAAcpC,MAAM,CAACH,IAArB,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAEb,iBADE;MAERQ,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAEZ,iBADE;MAERe,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASyC,aAAT,CAAuBzC,IAAvB,EAA6B;EAC3B,OAAO3C,KAAK,CAACuE,MAAN,CAAc,SAAQ5B,IAAK,OAA3B,CAAP;AACD;;AAAA;;AAED,UAAU0C,UAAV,CAAqBvC,MAArB,EAA6B;EAC3B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnD,IAAI,CAACwF,aAAD,EAAgBtC,MAAM,CAACH,IAAvB,CAAzB;IACA,MAAM7C,GAAG,CAAC;MACRkD,IAAI,EAAEV,mBADE;MAERK,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOM,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAMnD,GAAG,CAAC;MACRkD,IAAI,EAAET,mBADE;MAERY,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFZ,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,UAAU2C,aAAV,GAA0B;EACxB,MAAMvF,UAAU,CAACE,iBAAD,EAAoB4C,QAApB,CAAhB;AACD;;AAAA;;AAED,UAAU0C,cAAV,GAA2B;EACzB,MAAMxF,UAAU,CAACK,kBAAD,EAAqBmD,SAArB,CAAhB;AACD;;AAAA;;AAED,UAAUiC,kBAAV,GAA+B;EAC7B,MAAMzF,UAAU,CAACQ,uBAAD,EAA0BkD,aAA1B,CAAhB;AACD;;AAAA;;AAED,UAAUgC,qBAAV,GAAkC;EAChC,MAAM1F,UAAU,CAACW,0BAAD,EAA6BkD,gBAA7B,CAAhB;AACD;;AAAA;;AAED,UAAU8B,YAAV,GAAyB;EACvB,MAAM3F,UAAU,CAACc,gBAAD,EAAmBkD,OAAnB,CAAhB;AACD;;AAAA;;AAED,UAAU4B,eAAV,GAA4B;EAC1B,MAAM5F,UAAU,CAACiB,mBAAD,EAAsBqD,UAAtB,CAAhB;AACD;;AAAA;;AAED,UAAUuB,eAAV,GAA4B;EAC1B,MAAM7F,UAAU,CAACoB,mBAAD,EAAsBqD,UAAtB,CAAhB;AACD;;AAAA;;AAED,UAAUqB,iBAAV,GAA8B;EAC5B,MAAM9F,UAAU,CAACuB,qBAAD,EAAwBoD,YAAxB,CAAhB;AACD;;AAAA;;AAED,UAAUoB,eAAV,GAA4B;EAC1B,MAAM/F,UAAU,CAAC0B,mBAAD,EAAsBmD,UAAtB,CAAhB;AACD;;AAAA;;AAED,UAAUmB,kBAAV,GAA+B;EAC7B,MAAMhG,UAAU,CAAC6B,sBAAD,EAAyBmD,aAAzB,CAAhB;AACD;;AAAA;;AAED,UAAUiB,kBAAV,GAA+B;EAC7B,MAAMjG,UAAU,CAACgC,sBAAD,EAAyBkD,aAAzB,CAAhB;AACD;;AAAA;;AAED,UAAUgB,aAAV,GAA0B;EACxB,MAAMlG,UAAU,CAACmC,iBAAD,EAAoBiD,QAApB,CAAhB;AACD;;AAAA;;AAED,UAAUe,eAAV,GAA4B;EAC1B,MAAMnG,UAAU,CAACsC,mBAAD,EAAsBgD,UAAtB,CAAhB;AACD;;AAAA;AAED,eAAe,UAAUc,QAAV,GAAqB;EAClC,MAAMxG,GAAG,CAAC,CACRE,IAAI,CAACyF,aAAD,CADI,EAERzF,IAAI,CAAC0F,cAAD,CAFI,EAGR1F,IAAI,CAAC2F,kBAAD,CAHI,EAIR3F,IAAI,CAAC4F,qBAAD,CAJI,EAKR5F,IAAI,CAAC6F,YAAD,CALI,EAMR7F,IAAI,CAAC8F,eAAD,CANI,EAOR9F,IAAI,CAAC+F,eAAD,CAPI,EAQR/F,IAAI,CAACgG,iBAAD,CARI,EASRhG,IAAI,CAACiG,eAAD,CATI,EAURjG,IAAI,CAACkG,kBAAD,CAVI,EAWRlG,IAAI,CAACmG,kBAAD,CAXI,EAYRnG,IAAI,CAACoG,aAAD,CAZI,EAaRpG,IAAI,CAACqG,eAAD,CAbI,CAAD,CAAT;AAeD;AAAA"},"metadata":{},"sourceType":"module"}