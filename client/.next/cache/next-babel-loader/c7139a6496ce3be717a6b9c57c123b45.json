{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\n\nfunction loginAPI(data) {\n  return axios.post('/api/login', data);\n}\n\n;\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction logoutAPI() {\n  return axios.post('/api/logout');\n}\n\n;\n\nfunction* logOut() {\n  try {\n    console.log('saga login'); // const result = yield call(logoutAPI);\n\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n\n  ;\n}\n\n;\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\n;\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\n;\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n;","map":{"version":3,"names":["all","delay","fork","put","takeLatest","loginAPI","data","axios","post","logIn","action","type","err","response","logoutAPI","logOut","console","log","watchLogIn","watchLogOut","userSaga"],"sources":["C:/Users/DeokHyeon/Desktop/bluejay/client/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post('/api/login', data);\r\n};\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(loginAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: 'LOG_IN_SUCCESS',\r\n      data: action.data,\r\n    });  \r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_IN_FAILURE',\r\n      data: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction logoutAPI() {\r\n  return axios.post('/api/logout');\r\n};\r\n\r\nfunction* logOut() {\r\n  try {\r\n    console.log('saga login')\r\n    // const result = yield call(logoutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: 'LOG_OUT_SUCCESS',\r\n    });  \r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_OUT_FAILURE',\r\n      data: err.response.data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest('LOG_IN_REQUEST', logIn);\r\n};\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\r\n};\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n  ]);\r\n};"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,OAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAP;AACD;;AAAA;;AAED,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;EACtB,IAAI;IACF;IACA,MAAMT,KAAK,CAAC,IAAD,CAAX;IACA,MAAME,GAAG,CAAC;MACRQ,IAAI,EAAE,gBADE;MAERL,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOM,GAAP,EAAY;IACZ,MAAMT,GAAG,CAAC;MACRQ,IAAI,EAAE,gBADE;MAERL,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;IAFX,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,SAASQ,SAAT,GAAqB;EACnB,OAAOP,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAAA;;AAED,UAAUO,MAAV,GAAmB;EACjB,IAAI;IACFC,OAAO,CAACC,GAAR,CAAY,YAAZ,EADE,CAEF;;IACA,MAAMhB,KAAK,CAAC,IAAD,CAAX;IACA,MAAME,GAAG,CAAC;MACRQ,IAAI,EAAE;IADE,CAAD,CAAT;EAGD,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZ,MAAMT,GAAG,CAAC;MACRQ,IAAI,EAAE,iBADE;MAERL,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;IAFX,CAAD,CAAT;EAID;;EAAA;AACF;;AAAA;;AAED,UAAUY,UAAV,GAAuB;EACrB,MAAMd,UAAU,CAAC,gBAAD,EAAmBK,KAAnB,CAAhB;AACD;;AAAA;;AAED,UAAUU,WAAV,GAAwB;EACtB,MAAMf,UAAU,CAAC,iBAAD,EAAoBW,MAApB,CAAhB;AACD;;AAAA;AAED,eAAe,UAAUK,QAAV,GAAqB;EAClC,MAAMpB,GAAG,CAAC,CACRE,IAAI,CAACgB,UAAD,CADI,EAERhB,IAAI,CAACiB,WAAD,CAFI,CAAD,CAAT;AAID;AAAA"},"metadata":{},"sourceType":"module"}